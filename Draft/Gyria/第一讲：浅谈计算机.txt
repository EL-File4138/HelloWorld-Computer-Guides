第一讲：简谈计算机
什么是编程语言？
我们先来说一说什么是自然语言。

自然语言就是人类交流的语言，包括汉语、日语、英语等。其能承载的信息非常丰富，越是高级的编程语言，就越接近自然语言。
与自然语言一样，不同的编程语言，也有其独特的语法规则。

新兴领域：这些年，计算机科学家们一直研究如何能够让计算机更好的识别、理解和模拟自然语言，这也是人工智能的一个研究方向。这个方向虽还未完全实现，但仍有许多人们在夜以继日地做出贡献。

在人类发明计算机的时候，根据计算机的特性，为它设计了最早的计算机语言——机器语言。这门语言的组合很简单，只有0和1两个数字，也是计算机唯一一门语言——这和汉语的基本组成单位是偏旁部首，英语的基本组成单位是26个字母是同一个道理。

举个例子，把计算机拟人化，便于理解
假设要让计算机把11和22进行相加，编程人员需要对计算机说：001001001110001111001
计算机就明白了，原来是让我把11和22进行相加。

后来大家觉得这样太麻烦了，人类就是这样，嫌上楼太麻烦，于是就发明了电梯
因为嫌走路麻烦，发明了汽车，火车，飞机。

对计算机讲机器语言太麻烦了，还容易出错，万一多输一个0少输了一个1，那意思可能就完全变了。

研究计算机的前辈大牛们觉得机器语言太不好用了，也不知道折腾了多久，就捣鼓出了一种新的语言，叫做汇编语言
那么汇编语言与机器语言有何区别呢？
还是刚才举刚才那个例子

用汇编语言对计算机说，把11和22进行相加，那就容易多了
mov ax,11
add ax,22
（"mov"读"木"）
 
 这是什么意思呢？
 
 mov ax,11：把11存到一个“盒子”里面， 这个盒子的名字叫ax 
 add ax,22：把盒子里面的数字拿出来，跟22进行相加（所以结果是不是就是33呢），然后把33再存到这个盒子里面
 
 第一行代码执行完，ax就等于11了
 第二行代码执行完，ax就等于33了
 
 通过上述例子，你应该能初步的了解上述汇编语言的意思了
 其实，ax就是计算机内部一个存数字的"小盒子" ，他有一个专业的名词，叫“寄存器”
 你们有没有想到超市里临时寄存东西的柜子，一个道理
 
 那么问题来了，刚才在上面说了，“机器语言才是计算机唯一懂的一门语言”，这个要记牢
所以，用汇编语言和计算机交流，计算机是听不懂的，计算机只懂机器语言，只懂0和1

这个时候，计算机前辈们又设计了一种程序，叫“汇编器”
这个汇编器的作用呢，就是翻译，也就是把
mov ax,11翻译成”001001001110001111001“
add ax,22
 
所以，汇编器的本质是：相当于一个翻译。我们只要学习我们人类容易掌握的汇编语言，而剩下让计算机听懂的工作就是汇编器的活啦
它把人类写好的汇编语言翻译成机器语言，这样子计算机就能听懂啦~
汇编语言的每一行语句，都是和机器语言一一对应的，所以汇编语言我们可以理解为人类能直接看懂的机器语言

这个过程听起来简单，但其实非常不简单，并不是几天就想出来的，为了实现这么个过程，实际上花费了大量的心血


人类总是喜欢追求完美，喜欢让麻烦的事物追求极致的简单

于是又设计了一些更简单的编程语言，其中非常经典大家都知道的就是C语言
还是11加22的例子
C语言直接就写成了”11+22“

面对这么高级的语言，那么计算机自然就更听不懂了，要记住（再三强调）计算机只能听懂机器语言，也就是0和1
为了解决这个问题，于是前辈们又设计了一种程序，叫做编译器
编译器负责把高级语言翻译成汇编语言
汇编器再把汇编语言翻译成机器语言

这个时候，聪明的你有没有发现问题？高级语言为什么不能直接转换为机器语言呢？
这个问题非常有水平
理论上是可以实现的，但不是最优解决方案，为什么？将来讲到编译原理就知道了
先透露一点吧， 因为要实现这个过程，根据现有的科技与解决方案，技术成本是非常大的
人，有的时候解决一件事情，不是说最好就要选择它，我们还要考虑成本，技术的可行性
举个例子，假如写了一个编译器，用了半年时间，写了个汇编器，用了半年时间，实现从高级语言转换到汇编语言到机器语言的过程，只用了1年时间造出来
但如果想让高级语言直接转换到机器语言的话，开发出来可能需要10年时间（只是比喻，切勿实际看待）

当你学完编译原理之后，你就能明白为什么要如此成本和两次转换这样设计的一个好处了



机器语言是人设计出来的，只能使用0和1
但不同的公司设计机器语言标准是不一样的
举例：让计算机把两个数字相加
   A公司：1000
   B公司：0001
   
   那么一个程序使用的是A公司的汇编器生成的机器指令，就无法在B公司的机器上运行。
   这样的话，市场就会非常混乱，这个程序不具备一定的通用性
   这自然而然的就但是了一些协会，或者是比较权威的企业和企业为了避免这种事情发生，会制定一些行业设计标准
   机器语言不仅仅是适用于计算机的语言，任何像洗衣机、冰箱、电子手表，它里面都有程序
   只要是能包含程序的任何设备，都能叫做机器语言
   所以大家不要狭隘的认为，机器语言就是指电脑，我们手机上就有机器语言，甚至是我们的电磁炉、高压锅，它也有机器语言
   
   让大家设计机器语言是去参考某个标准而设计，不要乱定义，和谐是人类一直追求的事情，但有时候为了赚钱，总会有人去破坏和谐
   
   X86架构和ARM架构就是两钟种标准指令集的缩写（指令集就是机器语言，指令集意思是指令的集合）的编号缩写
   
   如果没有权威部门去制定这些行业标准的话，会发送什么样的情况呢？
   举个例子
   你买的是联想笔记本，你朋友买的是dell笔记本
   但是两台笔记本的USB接口大小不一样，你的u盘只能插到指定的笔记本上，非常影响交流，那是一件多么糟糕的事情！！！
   就实际存在的事情来说，安卓手机现在就比较混乱，各个企业之间的系统，不能相互刷机
   你买的小米，就得用小米那一套生态软件，华为就得用华为的，也许未来会解决这个问题谁知道呢？
   
   直到今天，我相信全球统一化编程语言，是很多人曾经心中或者现在正在怀揣的梦想
   
   以上就是为了帮助大家更好的理解编程语言，用拟人化的思维极其简单的给大家说了一下原理。
   
   慢慢的，计算机就不仅仅局限于计算了，当可以处理简单的文字，图片信息的时候，
   人类开始考虑，能不能让计算机相互之间进行信息传输，也就是联网，有了这个脑洞之后，也不知道过了多久，计算机大牛们就把互联网给捣鼓出来了
   
   随着科技的进步，手机、嵌入式等各种电子设备诞生包括网站这个名词孕育而生，为了不同的行业需求，也诞生和催生了许多相关产业
   在这个过程中，发明了各种各样的编程语言去解决这些需求，当然也有各种各样的硬件厂商，，CPU、显卡、鼠标、显示器、键盘、打印机、扫描仪、音响、路由器.....
   
   
   编程语言的开发也是一个接着一个的
   python、php、html、css、JavaScript、.Net、Delphi...
   截止今天，人类历史上有过几百种编程语言，今天能够活下来没有淘汰的说明的确有市场还需要它
   有了操作系统，有了数据库....
   随着代码越来越多，开发难度越来越大，有了软件工程，代码管理，多人协同开发，设计模式，框架，类库等概念，目的都是一个
   为了简化开发难度，保证开发质量，管理开发进度而诞生的相关技术。
   
   但这个过程是艰难的，不容易的，花费了很多智商顶尖的的科学家的脑力才有了我们今天的计算机技术。
   
   上述的任何一个专业名词，都可以写几千页的书去详细描述，学无止境，浩瀚如烟，博大精深等这些词语，大家随着接触计算机知识越来越多越发觉得人是多么渺小卑微。
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   


 
 
 
 
 
 
 
 
 
 
 
 
 

